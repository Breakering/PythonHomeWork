# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-03-03 14:51
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮箱地址')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否是管理员')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='是否是员工')),
            ],
            options={
                'verbose_name_plural': '堡垒机账户表',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_name', models.CharField(max_length=64, verbose_name='主机名称')),
                ('ip_adr', models.GenericIPAddressField(unique=True, verbose_name='主机地址')),
                ('port', models.PositiveSmallIntegerField(default=22, verbose_name='主机端口')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name_plural': '主机表',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='主机组名称')),
                ('hosts', models.ManyToManyField(to='web.Host', verbose_name='绑定的主机')),
            ],
            options={
                'verbose_name_plural': '主机组表',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='IDC名称')),
            ],
            options={
                'verbose_name_plural': 'IDC表',
            },
        ),
        migrations.CreateModel(
            name='RemoteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, verbose_name='远程账户名')),
                ('auth_type', models.SmallIntegerField(choices=[(0, 'ssh/password'), (1, 'ssh/key')], default=0, verbose_name='登录类型')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='远程账户密码')),
            ],
            options={
                'verbose_name_plural': '远程账户表',
            },
        ),
        migrations.AlterUniqueTogether(
            name='remoteuser',
            unique_together=set([('username', 'auth_type', 'password')]),
        ),
        migrations.AddField(
            model_name='host',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.IDC', verbose_name='对应IDC'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='bind_hosts',
            field=models.ManyToManyField(blank=True, to='web.Host', verbose_name='绑定的主机'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='host_groups',
            field=models.ManyToManyField(blank=True, to='web.HostGroup', verbose_name='绑定的主机组'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
